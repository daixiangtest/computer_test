{"name": "删除端口映射", "status": "broken", "statusDetails": {"message": "TypeError: not all arguments converted during string formatting", "trace": "self = <computer_test.test_cases.test_interfaces.test_cloud_server.TestCloudServer object at 0x000001E895AF7910>\nmysql_db = <comms.dbutils.DBUtils object at 0x000001E895F9AFA0>\n\n    @allure.suite('云服务器')\n    @allure.description(\"删除端口映射\")\n    # @pytest.mark.skip('暂时跳过')\n    def test_del_mapping(self, mysql_db):\n        case = self.cases[4]\n        allure.dynamic.title(case['case_title'])\n        allure.attach(body=self.cs.host, name=\"请求地址\")\n        try:\n            mapping_id = get_ini_data(CFI_COMPUTER, 'id', 'mapping_id')\n            res = self.cs.del_mapping(mapping_id)\n            assert res['code'] == 200\n            time.sleep(3)\n            a = mysql_db.find_one('SELECT delete_state FROM network_mappings WHERE id=%s ;', mapping_id)\n>           assert a is None\nE           assert (1,) is None\n\ntest_cases\\test_interfaces\\test_cloud_server.py:137: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <computer_test.test_cases.test_interfaces.test_cloud_server.TestCloudServer object at 0x000001E895AF7910>\nmysql_db = <comms.dbutils.DBUtils object at 0x000001E895F9AFA0>\n\n    @allure.suite('云服务器')\n    @allure.description(\"删除端口映射\")\n    # @pytest.mark.skip('暂时跳过')\n    def test_del_mapping(self, mysql_db):\n        case = self.cases[4]\n        allure.dynamic.title(case['case_title'])\n        allure.attach(body=self.cs.host, name=\"请求地址\")\n        try:\n            mapping_id = get_ini_data(CFI_COMPUTER, 'id', 'mapping_id')\n            res = self.cs.del_mapping(mapping_id)\n            assert res['code'] == 200\n            time.sleep(3)\n            a = mysql_db.find_one('SELECT delete_state FROM network_mappings WHERE id=%s ;', mapping_id)\n            assert a is None\n            logger.info(f\"测试编号:{case['case_id']},测试标题:{case['case_title']},成功!\")\n        except Exception as e:\n>           logger.error(\n                f\"测试编号:{case['case_title']},测试标题:{case['case_title']},执行失败!\", e)\n\ntest_cases\\test_interfaces\\test_cloud_server.py:140: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\Python\\lib\\logging\\__init__.py:1475: in error\n    self._log(ERROR, msg, args, **kwargs)\nD:\\Python\\lib\\logging\\__init__.py:1589: in _log\n    self.handle(record)\nD:\\Python\\lib\\logging\\__init__.py:1599: in handle\n    self.callHandlers(record)\nD:\\Python\\lib\\logging\\__init__.py:1661: in callHandlers\n    hdlr.handle(record)\nD:\\Python\\lib\\logging\\__init__.py:952: in handle\n    self.emit(record)\nC:\\Users\\HUAWEI\\AppData\\Roaming\\Python\\Python39\\site-packages\\_pytest\\logging.py:350: in emit\n    super().emit(record)\nD:\\Python\\lib\\logging\\__init__.py:1091: in emit\n    self.handleError(record)\nD:\\Python\\lib\\logging\\__init__.py:1083: in emit\n    msg = self.format(record)\nD:\\Python\\lib\\logging\\__init__.py:927: in format\n    return fmt.format(record)\nC:\\Users\\HUAWEI\\AppData\\Roaming\\Python\\Python39\\site-packages\\_pytest\\logging.py:114: in format\n    return super().format(record)\nD:\\Python\\lib\\logging\\__init__.py:663: in format\n    record.message = record.getMessage()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <LogRecord: root, 40, D:\\Huawei Share\\auto_test\\computer_test\\test_cases\\test_interfaces\\test_cloud_server.py, 140, \"测试编号:删除端口映射,测试标题:删除端口映射,执行失败!\">\n\n    def getMessage(self):\n        \"\"\"\n        Return the message for this LogRecord.\n    \n        Return the message for this LogRecord after merging any user-supplied\n        arguments with the message.\n        \"\"\"\n        msg = str(self.msg)\n        if self.args:\n>           msg = msg % self.args\nE           TypeError: not all arguments converted during string formatting\n\nD:\\Python\\lib\\logging\\__init__.py:367: TypeError"}, "description": "删除端口映射", "attachments": [{"name": "请求地址", "source": "a0bc3d8d-48ec-4607-b930-a04480ced563-attachment.attach"}, {"name": "log", "source": "0f073b7b-d667-49c0-b0be-720e1074c5ec-attachment.txt", "type": "text/plain"}], "start": 1706758561284, "stop": 1706758564402, "uuid": "ed6af4a2-d952-4c05-959f-6438a8963ac9", "historyId": "31a94a03274e1a60f4a525cd7a4e91a0", "testCaseId": "31a94a03274e1a60f4a525cd7a4e91a0", "fullName": "test_cases.test_interfaces.test_cloud_server.TestCloudServer#test_del_mapping", "labels": [{"name": "feature", "value": "云服务器模块"}, {"name": "parentSuite", "value": "云服务器"}, {"name": "epic", "value": "共享算力系统"}, {"name": "suite", "value": "云服务器"}, {"name": "subSuite", "value": "TestCloudServer"}, {"name": "host", "value": "LAPTOP-UIN85NG6"}, {"name": "thread", "value": "24040-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_interfaces.test_cloud_server"}]}